<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE HLScheme>
<HLScheme>
<!-- comment -->
<scheme name="C++" extensions="cpp;hpp;cxx;hxx;c++;h++">
	<rule name="types">
		<expr>\b(bool|char|const|double|float|int|long|short|signed|static|unsigned|void)\b</expr>
		<style color="#990000" bold="false" />
	</rule>
	<rule name="keywords">
		<expr>\b(asm|auto|break|case|catch|class|continue|default|delete|do|else|enum|export|extern|false|finally|friend|for|goto|if|inline|namespace|new|operator|private|protected|public|register|return|sizeof|struct|switch|template|this|throw|true|try|typedef|union|using|virtual|volatile|while)\b</expr>
		<style color="#000099" bold="false" />
	</rule>
	<rule name="preprocessor">
		<expr>^#include\b.*</expr>
		<expr>^#if\b.*</expr>
		<expr>^#ifdef\b.*</expr>
		<expr>^#ifndef\b.*</expr>
		<expr>^#else\b</expr>
		<expr>^#endif\b</expr>
		<expr>^#pragma\b.*</expr>
		<expr>^#define\b.*</expr>
		<expr>^#undef\b.*</expr>
		<style color="#006600" />
	</rule>
	<rule name="numbers">
		<expr>\b\d+\b</expr>
		<style color="#0000FF" />
	</rule>
	<rule name="block">
		<expr>[{}]</expr>
		<style color="#000000" bold="true" />
	</rule>
	<rule name="char">
		<expr>'\\?.'</expr>
		<style color="#990099" />
	</rule>
	<block name="string">
		<begin>"</begin>
		<end>"</end>
		<style color="#cc0000" />
	</block>
	<block name="cmnt" regExp="true">
		<begin>\/\*</begin>
		<end>\*\/</end>
		<style color="#999999" italic="true" />
	</block>
	<comment>
		<begin>//</begin>
		<style color="#999999" italic="true" />
	</comment>
</scheme>

</HLScheme>
